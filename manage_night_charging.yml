alias: "Manage Night Charging"
description: "Control charging for home batteries and electric car during cheap electricity period."
trigger:
  - platform: time_pattern
    minutes: "/4"  # Runs every 4 minutes

condition: []

action:
  - choose:
      # Check if current time is within cheap electricity period
      - conditions:
          - condition: or
            conditions:
              - condition: time
                after: "00:00:00"
                before: "08:00:00"
              - condition: time
                weekday: [sat, sun]  # All day during weekends
        sequence:
          - variables:
              max_power: 5500  # Max allowable grid consumption in watts
              current_consumption: "{{ states('sensor.totalgridpower') | int }}"
              

          - choose:
              # Case 1: Charge the car if home batteries above 50%
              - conditions:
                  - condition: numeric_state
                    entity_id: sensor.inverter_battery
                    above: 50
                  - condition: numeric_state
                    entity_id: sensor.iorek_byrnison_battery_level
                    below: 70
                sequence:
                  - variables:
                      current_car_switch: "{{ states('switch.iorek_byrnison_charge') == 'on' }}"
                      current_battery_power: "{{ states('sensor.totalbatterypower') | int }}"
                      current_car_amps: "{{ states('number.iorek_byrnison_charge_current') | int }}"
                      current_car_power: "{{ (current_car_amps * 225) if current_car_switch == true else 0 }}"
                      available_power: "{{ max_power - current_consumption + current_car_power - current_battery_power }}"
                      car_max_power: "{{ available_power if available_power <= 2925 else 2925 }}"
                      car_amps: "{{ ((car_max_power / 225) | int) if ((car_max_power / 225) | int) >= 5 else 0 }}"

                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ car_amps == 0 }}"
                        sequence:
                          - service: homeassistant.turn_off
                            target:
                              entity_id: switch.iorek_byrnison_charge
                          - service: number.set_value
                            target:
                              entity_id: number.inverter_2_battery_grid_charging_current
                            data:
                              value: 1
                      - conditions:
                          - condition: template
                            value_template: "{{ current_car_switch and car_amps != current_car_amps }}"
                        sequence:
                          - service: number.set_value
                            target:
                              entity_id: number.inverter_2_battery_grid_charging_current
                            data:
                              value: 1
                          - service: number.set_value
                            target:
                              entity_id: number.iorek_byrnison_charge_current
                            data:
                              value: "{{ car_amps }}"
                      - conditions:
                          - condition: template
                            value_template: "{{ not current_car_switch }}"
                        sequence:
                          - service: number.set_value
                            target:
                              entity_id: number.inverter_2_battery_grid_charging_current
                            data:
                              value: 1
                          - service: homeassistant.turn_on
                            target:
                              entity_id: switch.iorek_byrnison_charge
              # Case 2: Home batteries need charging
              - conditions:
                  - condition: numeric_state
                    entity_id: sensor.inverter_battery
                    below: 85
                sequence:
                  - variables:
                      current_battery_power: "{{ states('sensor.totalbatterypower') | int }}"
                      available_power: "{{ max_power - current_consumption - current_battery_power }}"
                      battery_max_power: "{{ available_power if available_power <= 2500 else 2500 }}"
                      battery_amps: "{{ (battery_max_power / 100) | int if (battery_max_power / 100) | int >= 1 else 1 }}"
                      current_car_switch: "{{ states('switch.iorek_byrnison_charge') == 'on' }}"
                  
                  - service: number.set_value
                    target:
                      entity_id: number.inverter_2_battery_grid_charging_current
                    data:
                      value: "{{ battery_amps }}"
                  
                  - choose:
                    - conditions:
                        - condition: template
                          value_template: "{{ current_car_switch }}"
                      sequence:
                        - service: homeassistant.turn_off
                          target:
                            entity_id: switch.iorek_byrnison_charge

              
          

      # Outside cheap electricity period
      - conditions:
          - condition: and
            conditions:
              - condition: not
                conditions:
                  - condition: or
                    conditions:
                      - condition: time
                        after: "00:00:00"
                        before: "08:00:00"
                      - condition: time
                        weekday: [sat, sun]
        sequence:
          - service: number.set_value  # Stop all charging
            target:
              entity_id: number.inverter_2_battery_grid_charging_current
            data:
              value: 1

          - variables:
              current_car_switch: "{{ states('switch.iorek_byrnison_charge') == 'on' }}"
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ current_car_switch }}"
                sequence:
                  - service: homeassistant.turn_off
                    target:
                      entity_id: switch.iorek_byrnison_charge

mode: single
